razor
@page "/constellation"
@rendermode InteractiveServer

<style>
.constellation-page {
    align-items: center;
    width: 100%;
    display: flex;
    flex-direction: column;
}
  .constellation-card{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;        border: 2px solid lightgray;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 15px;
    }
    .constellation-image {
        width: 250px;
        height: 250px;
        aspect-ratio: 1/1;
        object-fit: cover;
        border: 2px solid white;
        border-radius: 15px;
    }  
    .constellation-buttons {
        display: flex;
        justify-content: center;
        gap: 3%;
    }
    .planet-grid {
        gap: 10px;
        display: grid;        
        grid-template-columns: 1fr;
    }
    .constellation-buttons button {
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        width: 100%;
    }
    .constellation-stats {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
        width: 100%;
    }.constellation-stat {
        border: 1px solid #555;
        padding: 10px;
        border-radius: 5px;
    }
    .planet-card{
        gap: 10px;
        text-align: center;
    }
    .planet-card img {
        height: 250px;
        aspect-ratio: 1 / 1;
        object-fit: cover;
        object-position: center;
        border-radius: 15px;
    }    
    .planet-card-buttons {        display: flex;
        border: 1px solid #555;
        padding: 10px;        
    }
     .planet-card-buttons {
    }   
</style>

<div class="constellation-page">
    @foreach (var constellation in constellations)
    {
        <div class="constellation-card">
            <img src="@constellation.ImageUrl" alt="Constellation" class="constellation-image" />
            <div class="constellation-buttons">                
                <button @onclick="(e => LikeConstellation(constellation.Id))">Like</button>
                <button @onclick="(e => ScoutConstellation(constellation.Id))">Scout</button>
                <button @onclick="(e => ExploreConstellation(constellation))">Explore</button>
                <button @onclick="(e => ForgetConstellation(constellation.Id))">Forget</button>
               
            </div>
            
              <div class="constellation-stats">
                <div class="constellation-stat">Number of Inhabited Planets: @constellation.InhabitedPlanets</div>
                <div class="constellation-stat">Difficulty: @constellation.Difficulty</div>
                <div class="constellation-stat">Total Resources: @constellation.TotalResources</div>
                <div class="constellation-stat">Activity Level: @constellation.ActivityLevel</div>
            </div>
             @if (constellation.ShowPlanets)
             {
             <div class="planets-container">
                <div class="planet-grid">
                    @foreach (var planet in constellation.Planets)
                    {
                        <div class="planet-card">
                            <img src="@planet.ImageUrl" />
                          <p>Size: @planet.Size</p>
                            <p>Temperature: @planet.Temperature</p>
                            <div class="planet-card-buttons">
                                <button >Scout</button>
                                <button>Attack</button>
                                <button>Harvest</button>
                            </div>
                        </div>
                    }
                </div>
           </div>
           <button @onclick="(e => ExploreConstellation(constellation))">Hide</button>
            }
        </div>
    }
</div>

@code {
    public class ConstellationPageDto
    {
        public Guid Id { get; set; }
        public string ImageUrl { get; set; }
        public int InhabitedPlanets { get; set; }
        public string Difficulty { get; set; }
        public int TotalResources { get; set; }
        public string ActivityLevel { get; set; }
        public List<PlanetDto> Planets { get; set; } = new List<PlanetDto>();
         public bool ShowPlanets { get; set; } = false;
    }
    public class PlanetDto
    {
        public Guid Id { get; set; }
        public string ImageUrl { get; set; }
        public int Size { get; set; }
        public string Temperature { get; set; }
    }

    private List<ConstellationPageDto> constellations = new List<ConstellationPageDto>();

    protected override void OnInitialized()
    {
        for (int i = 0; i < 3; i++)
        {
            var constellation = new ConstellationPageDto
            {
                Id = Guid.NewGuid(),
                ImageUrl = "constellation.jpg",
                InhabitedPlanets = i + 10,
                Difficulty = "Normal",
                TotalResources = i * 1000,
                ActivityLevel = "High",

            };
            for (int j = 0; j < 9; j++)

            {
                constellation.Planets.Add(new PlanetDto
                {
                    Id = Guid.NewGuid(),
                    ImageUrl = "planet.jpg",
                    Size = j * 100,
                    Temperature = "Cold"
                });

            }

               constellations.Add(constellation);


        }
    }
        private void LikeConstellation(Guid id)
        {
            Console.WriteLine($"LikeConstellation: {id}");
        }
        private void ScoutConstellation(Guid id)
        {
            Console.WriteLine($"ScoutConstellation: {id}");
        }
        private void ForgetConstellation(Guid id)
        {
            Console.WriteLine($"ForgetConstellation: {id}");
        }
        private void ExploreConstellation(ConstellationPageDto constellation)
        {
            constellation.ShowPlanets = !constellation.ShowPlanets;
        }
}
